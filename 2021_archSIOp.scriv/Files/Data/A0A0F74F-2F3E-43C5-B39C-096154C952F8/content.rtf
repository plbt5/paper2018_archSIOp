{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 Semantic interoperability is about two software agents that share a particular reality in their domains of application, and exchange data that represent a certain state of affairs from that shared reality. Despite the (different) reasons that both agents might have for sharing the data, the only demand that is put on the exchange is to serve what was coined by Grice as the communication\'92s quality and relation: \'93Do not say what you believe to be false, or for which you lack evidence\'94 and \'93Be relevant to the immediate needs\'94. Subsequent to the exchange the data will be processed by the receiving agent and it stands to reason that understanding the data precedes their faithful use. In conclusion, semantic interoperability discloses the capability between two software agents to use exchanged data that faithfully represent the state of affairs that are relevant to consider about the shared reality at that moment.\
 \
We have seen that software semantics are necessarily reduced to the reciprocity that exists between data and their processing code in the atomic semantic monolith, and that the ASM has been established with the explicit purpose to guarantee the coherence between the data and their processing code. Unfortunately, by exchanging data this data are necessarily separated from the ASM they belong to. (Why it is useless to exchange the complete semantic monolith in order to establish sIOP, is left as an exercises to the reader ^[Answer: \\rotatebox\{180\}\{Communicating the semantic monolith, although possible, results in a too narrow solution towards sIOP because this would require each agent to have an exactly equal perspective on reality, and to represent this in the exact same way. Although possible, this will rarely be the case.\}].) The consequence of exchanging the semantic meaning (data) only, therefore, is twofold: it loses its coherence with its original pragmatic meaning (data processing code), and, the necessity for a new reciprocity with the pragmatic meaning belonging to the receiving agent emerges. Unless it can be guaranteed that this new emerging reciprocity is as coherent as it needs to be, semantic interoperability cannot emerge from the data exchange and phantom semantics will emerge in stead. From this we conclude that the main task about establishing sIOP is to re-establish coherence between the external semantic meaning and the internal pragmatic meaning. Note that although they share the same semantic meaning, the resulting semantic monolith of the receiving agent allows to be different from the original semantic monolith. For example, by exchanging a heartbeat both agents share the a semantic meaning about the number of beats per second, however the pragmatic meaning can vary between an indication of health for an health-care application or an indication of performance potential in a sports application. Mutatis mutandis, when the semantic meaning is represented differently between both agents, the resulting semantic monolith from the receiving agent can be semantically equivalent but syntactically quite different. \
\pard\pardeftab720\ri-10760\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 From this discussion we learn that the **prime objective** for sIOP is to assure that the reciprocity between data and code remains truthful to the state of affairs in reality. This relates for both the external data and the data that can be inferred from them. The **second objective** for sIOP to pursue is to ensure that the ASM\'92s from both agents remain independent from each other, viz. establishing a semantical loose coupling between both agents. Such loose coupling does not require one single homogeneous view on reality, which aligns neatly with the **third objective** for sIOP: to allow for semantic heterogeneity. Distinct agents will probably maintain alternative but equally legitimate points of view on reality, implying that semantic heterogeneity is a feature to preserve *necessarily*. The **fourth objective** of sIOP is to strive for access-and-play sIOP: ideally, sIOP between agents can be achieved instantaneously, also for unforeseen collaborations. This objective is very hard to achieve because when we accept that software is incapable of genuine understanding, and when we accept that correct use of data is to be preceded by its understanding, a human-in-the-loop to provide that understanding becomes a necessary condition for sIOP. The **fifth objective** of sIOP is to allow for semantic evolution and, consequently, the maintainability of sIOP. Finally, we consider that semantic heterogeneity brings about an issue of scalability, since semantics won\'92t be centrally coordinated anymore; in stead, semantic definitions will be distributed all over the place. We therefore include as **sixth objective** of sIOP to allow for scalable semantics.\
\
We conclude that from these six objectives, only the first (re-establish reciprocity) and fourth (access-and-play) are concerned with genuine understanding of semantics which demands for a human-in-the-loop. The others are equally important in order to achieve sIOP, however, \'93only\'94 refer to engineering challenges. We firstly address the first and fourth objectives.   \
\
\
}