{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fmodern\fcharset0 CourierNewPS-ItalicMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\ri-16872\partightenfactor0

\f0\fs24 \cf0 To start with the latter and as indicated in \\cref\{fig:semiotic-triangles\}(b), we equate faithfulness with trueness between the representation and the entity in reality. Since this aspect is a characteristic of an indirect relationship, it can only emerge as a result of the adequacy and correctness characteristics in that same Figure. Adequacy concerns the quality of the abstraction, which we do not address here. Correctness concerns the quality of the representation, and in this section we show how differences can emerge between the conceptualisation and the model when constructing the latter from the former.\
\
In literature, four construct issues are considered between a conceptualisations and its representation in a model, {\field{\*\fldinst{HYPERLINK "scrivcmt://B9E1CE5A-9F37-49D4-988D-63223C14B311"}}{\fldrslt depicted in}} \\cref\{fig:construct-issues\}. An exhaustive treatment can be found in [@Guizzardi:2005vt], see also [@CarvalhoeSilva2012; or @Azevedo2015].\
\
![Four different types of construction issues that come with formal semantics. (a) [@CarvalhoeSilva2012], (b) [@Azevedo2015]][def:constructissues] \
\
The correctness with which tokens represent the conceptualisation improves when the four construct issues are minimised:\
\
* 
\f1\i Construct overload
\f0\i0 , or 
\f1\i non-lucidity
\f0\i0 , emerges when the interpretation function maps an element from the abstract syntax onto more than one element (individual, subset) from the conceptualisation: One token can mean more than one thing, e.g., $\\CMcal\{I\}\\left(\\text\{\'93bank\'94\}\\right) = \\left\\\{ \\, \\text\{[|S], [|F], [|E]\} \\, \\right\\\}$, where [|S] stands for sofa, [|F] for a financial institute, and [|E] for a rising edge;\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 * 
\f1\i Construct excess
\f0\i0 , or 
\f1\i unsoundness
\f0\i0 , represents an abstract syntax element that does not map onto an element from the conceptualisation: One token does not have a meaning at all, $\\CMcal\{I\}\\left(\\text\{\'93pf\\^.h\'94\}\\right) = \\text\{[|$\\bot$]\}$, where the *falsum* concept ([|$\\bot$]) denotes the empty set (the valuation of which is always False);\
\pard\pardeftab720\ri-16872\partightenfactor0
\cf0 * 
\f1\i Construct redundancy
\f0\i0 , or 
\f1\i non-laconicity
\f0\i0 , occurs when more than one abstract syntax element can be used to represent an element from the conceptualisation: More tokens mean the same, e.g., $\\CMcal\{I\}\\left(\\text\{\'93xx?\'94\}\\right) = \\text\{[|zz?] \}$ and $\\CMcal\{I\}\\left(\\text\{\'93yy?\'94\}\\right) = \\text\{[|zz?]\}$;\
* 
\f1\i Construct deficit
\f0\i0 , or 
\f1\i incompleteness
\f0\i0 , specifies the situation where a conceptual element does not map onto a token: It is impossible to express a concept because the language has no token for it, e.g., $\\CMcal\{I\}^\{-1\}\\left(\\text\{[|c]\}\\right) = \\text\{\'93\\quad\'94\}$, with $c$ some conceptual element and token \'93\\quad\'94 intentionally left blank.\
\
The best representation of a conceptualisation, then, is a model that is lucid, sound, laconic and complete, i.e., the subjectivation/representation mapping is isomorphic [@Guizzardi:2005vt]. This strongly depends on the modelling language, and particularly its appropriateness with which it carves-out the reality of the DoI, viz the \'93ontological level\'94 [@Guarino1994b], our \'93terminological competence [that] can be gained by formally expressing the ontological commitment of a knowledge base\'94 (ibid.). We turn this into the following design principle.\
\
\pard\pardeftab720\ri-8561\partightenfactor0
\cf0 \\begin\{mmdp\}[Domain appropriateness principle]\\label\{dp:domain-appropriateness-principle\}\
\
\pard\pardeftab720\partightenfactor0
\cf0 The faithfulness of the semantic model depends on the ontological commitment of the modelling language: the more appropriate it carves out the domain of interest, the more faithful the domain model can represent the conceptualisation.\
\pard\pardeftab720\ri-8561\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \\textbf\{Type of information:\} business\
\
\\textbf\{Quality attributes:\} (semantic) accuracy, re-usability, manageability, understandability \
\
\\textbf\{Rationale:\}\
\\begin\{enumerate\}\
\\item A software agent cannot act effectively without a model of its DoI that represents the DoI. The trueness with which that model refers to the DoI directly reflects the quality of (the results of) the agent\'92s actions. Trueness emerges as the concatenation of the \\emph\{adequacy\} of the abstraction from reality and the \\emph\{correctness\} with which the conceptualisation is represented;  \
\\item The correctness of the representation of the conceptualisation improves by minimising the construct issues that occur in the domain model;\
\\item Construct issues are a direct result of the necessity to model (represent) a characteristic aspect of a concept with a language element that is not suited or even present to express that characteristic. Unable to correctly express a characteristic is a direct consequence of the inadequacy of the underlying ontological commitment;\
\\end\{enumerate\}\
\\textbf\{Implications:\}\
\\begin\{enumerate\}\
\\item The more specific the ontological commitment gets, the higher the semantic accuracy with which the domain model can refer to the DoI;\
\\item The more specific the ontological commitment gets, the higher its complexity which might even turn into a NP-complexity;\
\\item The ability of a software agent for semantic interoperability increases with the domain appropriateness of the domain model;\
\\item The achieved semantic interoperability for a pair of agents depends highly on the correspondence between the ontological commitments of their domain models;\
\\item The re-usability of the agent improves with \
\\item manageability ...?\
\\item understandability ...?\
\\end\{enumerate\}  \
\\end\{mmdp\}\
\
It is the responsibility of the software engineer to select a modelling language that provides a balance between semantic faithfulness at the one hand and computational (and comprehensibility) complexity for representing the domain model.\
\
\
<!-- page additions -->\
\pard\pardeftab720\ri-10760\partightenfactor0
\cf0 [def:constructissues]: src\\images\\ConstructIssues.png \{#fig:construct-issues  width=533px height=210px\}\
}