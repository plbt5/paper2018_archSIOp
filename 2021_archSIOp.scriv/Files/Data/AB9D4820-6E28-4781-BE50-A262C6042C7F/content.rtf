{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \
\\begin\{mmdp\}[The responsibility for the semantic meaning of data lays with the source]\\label\{dp:rfsm\}\
\
When it is reasonable to expect that the software agent will be engaged in collaboration or otherwise will interoperate with (an)other software agent(s), it is the responsibility of the software architect to serve the quantity and manner of the potential interoperability by specifying the semantics of the data in advance. \
\
\\textbf\{Type of information:\} business, data  \\\\\
\\textbf\{Quality attributes:\} semantics, interoperability, usability, efficiency   \\\\\
\\textbf\{Rationale:\}\
\\begin\{enumerate\}\
  \\item Data represent the state of affairs of some part of the world, viewed from a particular perspective of use. Such view is just one particular perspective out of many equally legitimate ones;\
  \\item Semantic heterogeneity, a direct consequence of the equally legitimate perspectives on reality, should not be considered a bug to resolve, but a feature to preserve and nurture in order to maximise semantic clarity and accuracy;\
  \\item Accepting semantic heterogeneity implies the probable uniqueness of the agents view on reality;\
  \\item Computers are not capable of genuine understanding, hence cannot establish semantics from data and thus require the human-in-the-loop for that;\
  \\item The responsibility for formulating the semantics that are expressed by the data can only lay by the software architect that has taken the particular perspective on reality when carving out the entities of interest to the software application;\
  \\item On specifying semantics, Grice\'92s maxims on communication, and particularly on serving the quantity and manner of communication, represent the natural constraints to respect;\
  \\item Without adherence to this principle, the meaning of the data expressed by the software agent can be considered flawed, inaccurate, incomplete or otherwise insufficient in its support for semantic interoperability.\
\\end\{enumerate\}\
\\textbf\{Implications:\}\
\\begin\{enumerate\}\
  \\item The specification of the data semantics is only dependent on the agent\'92s own perspective on the application domain, and can therefore be fulfilled before any specific interoperability with communication peers;\
  \\item No matter the number of different communication peers, the software agent needs to have the semantics of its data elements specified only once;\
  \\item By providing an explicit semantic specification of the data, an agent facilitates other components and agents to connect to it and, consequently, grounds its semantic interoperability with them unequivocally.\
\\end\{enumerate\}  \
\\end\{mmdp\}\
\
}