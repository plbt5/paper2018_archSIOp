{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 ---\
title: 'Establishing semantic interoperability in contemporary architectural paradigms'    \
subtitle: 'Consolidating loosely coupled semantics'     \
author:  \
- name: Paul Brandt  \
  affiliation: Eindhoven University of Technology; Netherlands Organization of Applied Scientific Research TNO, Den Haag, The Netherlands   \
- name: Eric Grandry  \
  affiliation: Ministry of Mobility and Public Works, Luxembourg, Luxembourg\
- name: Marten van Sinderen\
  affiliation: University of Twente, Enschede, The Netherlands  \
- name: Twan Basten  \
  affiliation: Eindhoven University of Technology, Eindhoven, The Netherlands  \
category:   \
bibliography: src/bib/CitedByMe-2018_archsIOP.bib  \
csl: templates/my-basic-reference-style.csl  \
abstract: |   \
  \
\pard\pardeftab720\ri-17683\partightenfactor0
\cf0   *Background:* Access-and-Play semantic interoperability (sIOP) is the next glass ceiling in IT-based business collaboration. Current approaches towards sIOP still rely on conventions on the semantics of the exchanged terms, which can be considered both accepted folklore and an impediment to access-and-play sIOP. A breakthrough for this impasse requires consensus on the foundations of semantics and sIOP. In a previous paper we already conclude that in software, semantics cannot exist and is reduced to the reciprocity between data and software code. \
  \
  This reciprocity can be contained \
\
s and software are on odds with each other: software can only operate on a token-based machine whereas semantics require an interpretation outside the realm of tokens. We resolved this fundamental incompatibility by establishing that whereas semantics in software, its best  and\
\
  The effort of the inevitable human-in-the-loop can be reduced and her position improved. This is a matter of software architecture, and it should address how semantic interoperability can be consolidated by it.       \
\pard\pardeftab720\partightenfactor0
\cf0   \
  *Objective:* The objective of our study is to identify and formulate the fundamental demands towards {\field{\*\fldinst{HYPERLINK "scrivcmt://89C5FC34-49E4-4FE3-B691-2F0C75BD84C8"}}{\fldrslt access-and-play interoperability}}, to derive their supporting architectural principles, and its integration in contemporary architectural paradigms.    \
  \
  *Method:* We follow a design-science approach and address the business relevance of the problem, and identify six requirements on sIOP, two of which are concerned with a genuine understanding of semantics that demand for the human-in-the-loop. We assume that the collaborating agents have followed the architectural principles on semantics according to our preliminary study [@Brandt2021a], which results in an explicit representation of an atomic semantic monolith for each of the agents: two semantic anchorages. We subsequently develop four design principles in order to support interoperability between the semantic anchorages, and one design principle to cater for the semantic distinction between a formal semantic correspondence and the necessary data transcription during communication. We finally evaluate these principles by designing and formulating an ISO-42010 Architecture Viewpoint and View on sIOP.   \
  \
  *Results:* Semantics in software are the result of a reciprocity between data and the software code that operates on them, resulting in a local semantic monolith [@Brandt2021a]. Data exchange breaks that semantic monolith and hence the aforementioned reciprocity. The main concern of sIOP is to re-establish a valid reciprocity between the internal data processing code from the receiving agent and the external data as received from the producing agent, without extending the semantic monolith from either agents. We show that loosely coupled semantics, semantic alignments and a shared ontological commitment of the applied modelling language can be considered the cornerstone to achieve sIOP. The supporting principles {\field{\*\fldinst{HYPERLINK "scrivcmt://F265FCC9-1FCD-47DA-9CFE-067CB3C5F072"}}{\fldrslt are}}: (i) assume responsibility for the semantics of one\'92s data, (ii) maintain an explicit ontological commitment, (iii) abstract semantics from the communication syntax, (iv) align the internal and external semantic meaning of the exchanged data, and (v) encapsulate how agents exchange semantic meaning. This results in a loosely coupled semantics that is re-usable for every interoperating peer agent, even those that are not anticipated for during the agent\'92s design. The resulting ISO-42010 Architecture Viewpoint and View on sIOP, including a semantic mediation capability, represents a pattern to consolidate sIOP in contemporary architectural paradigms.  \
  \
  *Conclusions:* The major shortcomings in architectural paradigms to account for an access-and-play sIOP are their negligence of a separation of concerns between the semantic representation and data communication syntax at the one hand and human-authored alignments and the automated mediation process at the other, and establishing the conditions in support of  in advance. By their explicit inclusion, we show that loosely coupled semantics can be consolidated in contemporary architectural paradigms, stimulating access-and-play sIOP.   \
    \
  \
...}