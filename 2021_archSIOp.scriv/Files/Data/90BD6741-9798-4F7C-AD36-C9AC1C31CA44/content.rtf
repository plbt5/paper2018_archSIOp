{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Based on above engineering principles, we investigate the extent to which they support semantic scalability. \
\\Cref\{d
\fs22 \AppleTypeServicesU1 ef:semantic-scalability
\fs24 \AppleTypeServicesU0 \} (semantic scalability) requires to allow software agents to adopt or consolidate additional semantic perspectives or more complicated semantic heterogeneity without compromising sIOP. This has ramifications for the pragmatic meaning, because it might:\
\
* extend the purpose of the collaboration, either by adding different details to the existing purpose, or by adding new goals that are to be achieved by it;\
* require to consider new background knowledge to improve on one\'92s comprehension of the situation, or on one\'92s ability to achieve the purpose of the collaboration;\
* include other contexts within which the collaboration is to happen as well.\
\
Clearly, a semantic perspective is intimately related to the pragmatic meaning, in the sense that the latter is a causal consequence of the former. Adding another semantic perspective to a collaboration implies, therefore, that the pragmatic meaning of the DSC might change. The first engineering consequence to consider is the need to separate the pragmatic meaning from the semantic meaning in order to minimise the impact of those changes to the semantic meaning and the other agent behaviour. In this way, new pragmatic meaning can be created by modifying or extending an existing ASM, or creating a new ASM, only by adding existing or introducing new semantic meaning to it. This already improves semantic scalability, and is a new argument in favour of an already existing design principle, identified and elaborated in \\cref\{semantics-in-software\}, item 3. The second engineering consequence is to minimise the engineering effort required to realise new achievement behaviour, which implies new achievement processes: an alternative start conclusion and/or new way to achieve an existing goal, or a new goal that requires a new achievement process.  \
\
\
\
To that end, we separate two independent situational dimensions, viz dynamics in stakeholders that contribute to the business collaboration at the one hand, and variation in their perspectives on the DoA on the other. We assume that each stakeholder contributes to (part of) the collaboration. We consider semantic heterogeneity between them, hence each stakeholder is represented by a software agent with its own domain model. We further assume overlap between the DoAs of the different stakeholders, with the consequence that the subject of collaboration is constituted by the overlaps in DoAs as spanned by the stakeholders. We start with the simple case, a static set of stakeholders that share an equivalent perspective. \
}