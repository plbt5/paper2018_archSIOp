{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0

\f0\fs24 \cf0 \AppleTypeServicesU1 <$Scr_Ps::0>
\f1 # Standard Scrivener+Pandoc Project YAML metadata\
# IMPORTANT: YAML configuration files use SPACES for indentation to define structure, remember to straighten any smart quotes, and don't capitalise metadata keys like "author" or "title", they must be lowercase!\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0
\cf0 \AppleTypeServicesU0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0
\cf0 \AppleTypeServicesU1 # Select which templates pandocomatic will use\
# you can enter overrides to the templates here as well\
pandocomatic_:\
  use-template:\
    - elsevier  \
  preprocessors:\
    - preprocessors/preludeGitVersion.py\
title: "<$projecttitle>"\
tnote: \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0
\cf0 \AppleTypeServicesU0   - "Tables & figures with 2-columns incorrectly placed; will be corrected when submitting."\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0
\cf0 \AppleTypeServicesU1 author:\
  - name: Paul Brandt\
    orcid: 0000-0002-2353-967X  \
    affiliation: 1\
    correspondence: {\field{\*\fldinst{HYPERLINK "mailto:paul@brandt.name"}}{\fldrslt paul@brandt.name}}  \
  - name: Eric Grandry\
    orcid: 0000-0003-3553-8460  \
    affiliation: 2\
    email: egrandry@gmail.com  \
  - name: Marten van Sinderen   \
    orcid: 0000-0001-7118-1353  \
    affiliation: 4        \
    email: m.j.vansinderen@utwente.nl   \
  - name: Twan Basten     \
    orcid: 0000-0002-2274-7274  \
    affiliation: [1,3]  \
    email: a.a.basten@tue.nl  \
institute:\
  - 1: Eindhoven University of Technology (TU/e), Eindhoven, The Netherlands\
  - 2: Ministry of Mobility and Public Works, Luxembourg, Luxembourg\
  - 4: University of Twente (UT), Enschede, The Netherlands\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\sl288\slmult1\partightenfactor0
\cf0 \AppleTypeServicesU0   - 3: ESI (TNO), Eindhoven, The Netherlands\AppleTypeServicesU1 \
keywords:\
  - semantic interoperability\
  - software architectures\
  - semantics\
  - interoperability\
  - design principles\
journalname: Information and Software Technology  \
\AppleTypeServicesU0 version-incr: commit # major, minor or commit\AppleTypeServicesU1 \
compiled: <$shortdate>\
date: <$fulldate>\
ack: P.B. would like to acknowledge Hanneke Dominicus for her editorial efforts\
abstract: |   \
  \
\AppleTypeServicesU0   *Background:* Absence of access-and-play semantic interoperability (sIOP) is a major hurdle to contemporary IT-based business collaboration. Current approaches towards sIOP not only impede access-and-play sIOP but also its progress towards a standard infrastructural semantic layer. Real-world semantics cannot exist in software and are reduced to the reciprocity between data and data processing. Data exchange breaks that reciprocity, failing sIOP. The main concern of sIOP is to re-establish a valid reciprocity between the data consumer\'92s internal data processing and the data producer\'92s external data, while maintaining loosely coupled semantics. The access-and-play concern for sIOP requires the effort of the inevitable human-in-the-loop to be reduced. Both concerns are a matter of software architecture.       \
  \
  *Objective:* The objective of our study is to identify and formulate the fundamental demands on aboth concerns, to derive their supporting architectural principles, and their integration in contemporary architectural paradigms.    \
  \
  *Method:* We assess the fundamental problems and identify six requirements on sIOP, two of which are demanding a human-in-the-loop. We develop design principles in support of interoperability between the agents\'92 semantics. We evaluate these principles by designing an ISO-42010 Architecture Viewpoint and View on sIOP.   \
  \
  *Results:* We show that loosely coupled semantics, semantic alignments, and accountability about the applied ontological commitment the cornerstones to achieve sIOP. The supporting principles are: (i) take responsibility for your data semantics; (ii) maintain an explicit ontological commitment; (iii) abstract semantics from communication; (iv) align the internal and external semantics of exchanged data; (v) encapsulate how agents exchange semantics. The resulting ISO-42010 Architecture Viewpoint and View on sIOP, including a semantic mediation capability, are capable of consolidating sIOP in contemporary architectural paradigms.  \
  \
  *Conclusions:* Our principles correct the major architectural shortcomings for an access-and-play sIOP capability, i.e., negligence of a separation of concerns between (i) semantics and data, and (ii) human-authored alignments and automated mediation. Establishing the conditions for their support in advance consolidates sIOP by loosely coupled semantics that are re-usable for every collaboration, even those that are not anticipated for. We conclude that loosely coupled semantics can be consolidated in contemporary architectural paradigms, stimulating access-and-play sIOP.   \
     \
  \

\f0 <!$Scr_Ps::0>}