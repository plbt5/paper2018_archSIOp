{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fmodern\fcharset0 CourierNewPS-ItalicMT;\f2\fmodern\fcharset0 CourierNewPS-BoldMT;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 Contemporary architectures apply many models that collectively represent the software agent. We concluded that one of them, the conceptual model, is a descriptive (backward-looking) model. However, many if not all of the other models that are applied are taking a forward-looking role, prescribing the structure and behaviour of the software agent as such. Inevitably, the forward-looking models will apply notions from the conceptual model, demanding a clear formal relation between them, which is the subject of this Section.   \
\
In [@Carraretto2012], the authors provide initial steps for a principled two-level approach, viz an ontological level that essentially provides for a vocabulary that is used at the information level to formulate an *information model* to address information concerns about *reference* (how to identify things), *measurement* (how to qualify properties of things), *history tracking* (how to maintain a registry on past and present) and *time* (how to model events). We do not intend to limit ourselves to this specific relation between a conceptual model and an information model, but appreciate the essential idea that reuse of the conceptual model by the forward-looking models is in demand of one or more relations between them. The core question is what types of relationship are required and appropriate, and what types should be omitted. Although we address this issue specifically in the context of the relation between the conceptual model and the model pair in the ASM, since it is relevant to other forward-looking models as well we will discuss the matter in a broader perspective than the ASM alone. \
\
Two types of definitions exist that need to be distinguished here, extension and intension. An 
\f1\i extensional definition
\f0\i0  explicitly lists all elements within a set. The set includes all the elements for which the definition holds, and excludes those for which the definition does not hold. Consequently, this works for finite sets only. Contrarily, an 
\f1\i intensional definition
\f0\i0  is based on the formulation of an algorithm or condition that produce the set. In order to define an infinite set one requires an intensional definition. In [@Guarino:2014ws] the following use of this has been made in terms of semantics:\
\
* Intension (concept): part of meaning corresponding to general principles, rules to be used to determine reference (typically, abstractions from experience);\
* Extension (entity): part of meaning corresponding to the effective reference. \
\
We will characterise different relation types first, as follows [@Henderson-Sellers2012]:\
\
* 
\f2\b Classification
\f0\b0 : This relationship considers one or more criteria which collectively specify a particular characterisation of entities in the DoI. Thus, the classification allocates individuals to a set founded on an intensional definition. {\field{\*\fldinst{HYPERLINK "scrivcmt://12164D14-29CE-41A4-97B8-A17A54B11559"}}{\fldrslt Mathematically}}: $\\forall c \\in \\concept\{C\}: \\; c \\in \\intn(A) \\, \\land \\, c = \\intn(a) \\Leftrightarrow A(a)$, with \\concept\{C\} the DoI, $\\intn(A)$ the classified set, and $A$ the classifier (property or predicate) for the individual $a$;\
* 
\f2\b Instantiation
\f0\b0 : Different from [@Henderson-Sellers2012], we use a more restrictive definition. Also denoted as instance-of, instantiation is in its genuine form depicted in \\cref\{fig:onto-square-and-sextet\}. In its ontological context, the individual entails a universal entity about individuals that share one or more particular characteristics. This notion is highly relevant since it puts the instantiation relation in between universals and particulars, only. Formulated as a set and its set members, this implies that set members can not represent subsets: $\\forall x :: U \\; \\Leftrightarrow \\; \\intn(x) \\in \\concept\{U\} \\, \\land \\, \\intn(x) \\nsubseteq \\concept\{U\}$, where $x :: U$ denotes the instantiation relation between (individual) $x$ and (universal) $U$. The set $\\concept\{U\}$ can be defined either intensionally or extensionally;\
* 
\f2\b Generalisation
\f0\b0 : Consider two sets of individuals, $\\concept\{A\}$ and $\\concept\{B\}$. The set $\\concept\{B\}$ is considered a generalisation for set $\\concept\{A\}$ (or $\\concept\{A\}$ a specialisation of $\\concept\{B\}$) if and only if all elements that belong to set $\\concept\{A\}$ also belong to set $\\concept\{B\}$. In set theory terms, $\\concept\{A\} \\subseteq \\concept\{B\}$, in linguistic terms $A \\sqsubseteq B$ since $\\intn(A \\sqsubseteq B) \\Leftrightarrow \\intn(A) \\, \\intn(\\sqsubseteq) \\, \\intn(B) \\, \\Leftrightarrow \\concept\{A\} \\subseteq \\concept\{B\}$, also denoted the 
\f1\i subsumption
\f0\i0  relation; \
* 
\f2\b Type-of
\f0\b0 : ... .\
* 
\f2\b Conformance
\f0\b0 : Where the previous relationships exist between elements of one or two models, conformance represents a type of relationship that expresses a relation between two adjacent levels, e.g., a model and its meta-model. Naturally, such relation cannot exist without taking into account the relations between the elements from the model and those from the meta-model. Since a (meta-)model ($M$)$M$ is a compound of tokens $e_i$, mathematically, that means $\\forall e_i \\in M \\; \\exists f \\in MM : T(e_i) = f$, with $T(\\cdot)$ the type-of relationship;\
\
In order to decide what type of relationship to apply, we consider the primary purpose of the models. The conceptual model is solely focused on supporting the agent\'92s functionality, whereas the forward-looking (system) models are supporting its extra-functional demands as well. This implies that the relationships between the conceptual model and the other models exist either between functional/functional demands, or between functional/extra-functional demands. Furthermore, we demand that the forward-looking models shall maintain the coherence in the ASM as established by the conceptual model, and hence, do not alter the reciprocity of the models in the ASM. We contrast these requirements with the characteristics of the relation types in \\cref\{tab:demands-vs-types\}.\
\
\
-------------------------------------------------------------------------------------------------------------------------------------------\
Demands               Classification           Instantiation           Generalisation           Conformance           Type-of\
--------------------- ------------------------ ----------------------- ------------------------ --------------------- ---------------------\
Functional-Functional \
\
Functional/\
Extra-Functional\
\
Maintain coherence\
\
-------------------------------------------------------------------------------------------------------------------------------------------\
\
Table: Demands for the relationship between the conceptual model and forward-looking models versus the type of relationship. \\label\{tab:demands-vs-types\}\
\
\
<Apart from this, it is noteworthy to consider relationship types that are applied within forward-looking models. As a general rule of thumb, those relationship types should be grounded in the conceptual model as well, in order to guarantee the coherence and reciprocity. Such relationship types are defined as pairs of individuals (R)> \
\
}