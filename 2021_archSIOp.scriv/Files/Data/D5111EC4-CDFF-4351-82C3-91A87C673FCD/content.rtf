{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 CourierNewPS-ItalicMT;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 In our research towards sIOP, we use AI where possible (computational semantics for software agent\'92s DM; support for semantic reconciliation), and rely on the human brain where absolutely necessary (but not more). The latter demands ontology engineering at design time, and specifying business conversation processes and authoring semantic reconciliation just before engaging in collaboration. We justify such approach by our observation that, no matter how the human will be positioned in the architecture, in its pure sense, an access-and-play capability can not be established, providing the current state of the art. However, the time-to-deliver sIOP between two interoperating software agents can be dramatically reduced. \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 We discuss the following shortcomings.\
\
\pard\pardeftab720\partightenfactor0
\cf0 * The ISO42010 viewpoint \'85.\
* \'85\
\
Our research establishes the following 
\f1 <$Scr_Cs::0>
\f2\i conclusions
\f1\i0 <!$Scr_Cs::0>
\f0 .\
\
A sIOP bridge is built upon agent-specific semantic anchors at each side of the semantic gap, applied to connect the bridge\'92s arch that reconciles the semantic differences, and a roadway that carries the alignment-based data transcription during the business conversation that is hold between the business stakeholders during their collaboration. All three elements apply formal, computational semantics that enable mechanical processing of the underlying data during run-time. This also allows for more generic components that, eventually, can be pushed into the infrastructure to provide semantic services. \
\
Semantic heterogeneity, apart from being fact of life, exists because applications require to be faithful to reality. sIOP requires the semantic heterogeneity to be resolved, and since computers still cannot genuinely understand, a human in the loop is necessary despite the human performance impedes true access-and-play sIOP. Her position in the software engineering cycle is a matter of architecture, and we present concerns and design principles that lead to a minimal human contribution concentrated on aligning semantic differences, that is scalable as well. \
\
When software agents engage in business collaboration(s) with (an)other software agent(s):\
\
  i. they must take responsibility for the semantics of their shared data, including the applied ontological commitment;\
  i. they must specify their role in the collaboration process;\
  i. they must align their semantic meaning with those of the agents that are involved in the conversations;\
  i. they must adopt the semantic protocol required to perform a semantic bootstrapping process between two or more agents;\
  * items (i) and (iv) are design time preparations, whereas (ii) and (iii) are required to be developed separately for each collaboration.\
\
Semantic scalability requires loosely coupled semantics, which is based upon the principles of separation of concerns and transparency applied on the semantic level, for which we provide definitions and design principles. Moreover, semantic scalability is also supported by applying the mediation pattern that distinguishes a business collaboration specification used to coordinate and control the conversations, and hence the semantics of the data transcriptions that apply between stakeholders within the collaboration.\
\
By identifying a specific 42010 viewpoint on sIOP, a necessary condition towards the preparation of a sIOP capability in a software agent has been identified which can be applied to all MDE and view-based software architectures.\
\
Our work shows shortcomings that require 
\f1 <$Scr_Cs::0>
\f2\i additional research
\f1\i0 <!$Scr_Cs::0>
\f0 :\
\
Semantic compatibility is defined as a continuous scale as opposed to a binary characteristic. No criteria have been identified, yet, that contribute significantly to establishing the extent of semantic compatibility. However, it is clear that the lower the extent in semantic compatibility between the DSP and DSC, the more complicated it becomes to achieve semantic reconciliation between them at the domain level. This is of particular significance, considering the very few alignments between TLOs that are in existence today, e.g., [@Temal2010;@Khan:2015fw]. In order for sIOP to emerge, we consider it necessary to improve on the number and quality of alignments between TLOs. However, even with these additional alignments, fundamental incompatibilities between concepts from different TLOs will remain. Together with the current absence of alignments between TLOs, the question becomes whether these semantic complications can be resolved in one overall alignment at the domain level, and if so, what the most effective approach would be to their resolution? Despite the vast body of knowledge reported in literature about ontology reconciliation and matching, to the best of our knowledge no research has been applied on semantic reconciliation between domain concepts, the semantics of which is formed by an amalgamation between the semantics originating from the TLO and that from the domain perspective.  \
 \
An alignment that specifies the formal semantic relation between concepts of collaborating agents, is insufficient for data transcription: where the former can select from all logical relationships the one that validates the correspondence that applies, the latter can only replace one concept for (a logical combination of more than one) concept, effectively implementing a semantic equivalence relation. This fundamental difference must be resolved in order to prevent naive transcriptions that insert phantom semantics.\
\
We consider the semantic protocol to show distinct phases, establishing: (i) protocol to use; (ii) semantic compatibility; (iii) required application ontologies; and (iv) availability of alignments, incl. probably sem.reconciliation subprotocol. A fifth phase, establishing collaboration process / protocol, limits the scope of (ii)-(iv) to separate conversations only, improving simplicity & maintainability by SoC, and significantly improving semantic scalability. Still, this is just a suggestion for an initial outline on meta-semantics for a happy scenario. More research towards an operational and infrastructural sIOP service layer that requires minimal engagement of the software agents (and hence minimal protocol support) is required.\
\
\
The comprehension and telic concerns represent, together with the primary concern, the modularisation concern and the business collaboration concern, five complementary semantic capabilities that we consider necessary in support of loosely coupled semantics. These semantic concerns embody a separation between 
\f1 <$Scr_Cs::0>
\f2\i understanding
\f1\i0 <!$Scr_Cs::0>
\f0  and 
\f1 <$Scr_Cs::0>
\f2\i use
\f1\i0 <!$Scr_Cs::0>
\f0  of semantics, founding the aforementioned credo 
\f1 <$Scr_Cs::0>
\f2\i understanding precedes use
\f1\i0 <!$Scr_Cs::0>
\f0 . More importantly, with these loosely coupled semantic functionalities, one can build dynamic business collaboration as shared processes, involving shared conversation states and constituting stakeholder SoAs, without insisting upfront on a particular instantiation in particular agents with their used semantics that collaboratively implement the collaboration. Moreover, 
\f1 <$Scr_Cs::0>
\f2\i how
\f1\i0 <!$Scr_Cs::0>
\f0  each agent is to achieve their part in such shared SoA can be left to the discretion of the involved stakeholders. At the same time, such sSoC allows reuse, maintenance and evolution of these semantic functionalities independently from each other. \
\
\
\
\
\
}