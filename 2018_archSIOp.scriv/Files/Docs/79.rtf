{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 Consolidating sIOP demands the emergence of *loosely coupled semantics*: Loose coupling in the classical sense is realised through the principles of separation of concerns, and transparency. In its original reading this implies separating, without duplication, *what* functionality the components are capable of, while leaving *how* such capability is realised completely transparent. Contrarily, semantic separation of concerns is not about maintaining complementary semantics; in fact, the agents are required to have an overlap in the domain of interest, since interoperation would be completely useless otherwise. Instead, separation of concerns refer to enforce an explicit separation between syntax and semantics. Additionally, it refers to keeping each other\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s representations of the semantic meaning strictly separated. Semantic transparency, then, refers to remaining transparent about how the semantic meaning is represented. As analogy, consider a vehicle (the representation of semantics) with its cargo (the semantic meaning that it bears). Logistics rely on an external transfer service that can change the vehicle from a truck into a ship or aircraft, without ruining the cargo. Similarly, software agents should rely on an infrastructural mediation service that can transcribe the semantic representation from its native form into a foreign form without introducing invalid semantics. Then, agents can communicate in their own native representations without the need to learn or integrate foreign representations.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 ----}
\par\plain {\f0\fs24\b0\i0 Below sections are under construction.}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Consequently, the software agents have been developed totally and completely independent from each other. This raises the following semantic concerns:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 1. Loosely coupled semantics:}
\par\plain {\f0\fs24\b0\i0     i. Define semantics once during software design phase, and achieve sIOP many times with many different peers}
\par\plain {\f0\fs24\b0\i0     i. EW Dijkstra: Connected but as independent as possible. In its original reading this implies only defining the *what* but leaving the *how* transparent. For semantics the implication is a more abstract one: the semantics of what is being communicated shall remain transparent to *how* it is represented. More specifically, agents shall rely on an external oracle that can change the semantic vehicle from its original source native representation to the destined target representation, without changing the semantic cargo. Agents, then, can communicate in their own native representations without the need to learn or integrate their peers\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92 representations.}
\par\plain {\f0\fs24\b0\i0 1. Scalable sIOP:}
\par\plain {\f0\fs24\b0\i0     i. Variable in number of peers}
\par\plain {\f0\fs24\b0\i0     i. Variable in level of semantic heterogeneity}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 *Ad. Dijkstra\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s \u8220\'93Connected but as independent as possible\u8221\'94*. Complement weak AI with human brain:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0  * use AI where possible (computational semantics for software agent; supporting semantic reconciliation)}
\par\plain {\f0\fs24\b0\i0  * use human brain where necessary (but not more): ontology engineering @ design time; alignment authoring @ pre-runtime}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0      }
\par\plain {\f0\fs24\b0\i0 ***Achieve loosely coupled semantics***}
\par\plain {\f0\fs24\b0\i0   }
\par\plain {\f0\fs24\b0\i0 Loose coupling is founded on principles about (i) separation of concerns, and (ii) transparency:}
\par\plain {\f0\fs24\b0\i0    }
\par\plain {\f0\fs24\b0\i0 * Principle *Separation of concerns*:}
\par\plain {\f0\fs24\b0\i0     * Classical: }
\par\plain {\f0\fs24\b0\i0         i. Decompose system in parts}
\par\plain {\f0\fs24\b0\i0         i. with minimal functional overlap}
\par\plain {\f0\fs24\b0\i0     * Semantical:}
\par\plain {\f0\fs24\b0\i0         i. Separate your own semantics (i.e., conceptualisations, viz. let each software agent manage its own abstraction from reality)}
\par\plain {\f0\fs24\b0\i0         i. from establishing sIOP }
\par\plain {\f0\fs24\b0\i0 * Principle *Transparency*}
\par\plain {\f0\fs24\b0\i0     * Classical: }
\par\plain {\f0\fs24\b0\i0         i. Agnostic to *how* its functions are being achieved}
\par\plain {\f0\fs24\b0\i0         1. Communicate with minimal mutual dependency}
\par\plain {\f0\fs24\b0\i0     * Semantical:}
\par\pard\plain \li450\fi-450\ltrch\loch {\f0\fs24\b0\i0         i. Agnostic to *how* semantics are being achieved}
\par\plain {\f0\fs24\b0\i0         i. Communicate with minimal syntactic dependency, i.e., without agreements on semantic representation  }
\par\pard\plain \ql\ltrch\loch \f0\fs24\b0\i0
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Formulate the principles in the format according to [@Greefhorst2011]}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 *Ad. semantic separation of concern*. Where in its classical application the result of applying the principle is that atomic functions are defined, designed and implemented only once and remain unique, in its semantic application the result of applying this principle is that every software agent maintains its own semantics. Semantics are, therefore, distributed all over the place. This seems counterintuitive or even plain wrong, however, it is necessary for complying with the concern about semantic scalability (in support of heterogeneous semantics). Besides that, it is a direct consequence of the demand to allow for independent software development.}
\par\pard\plain \ri-16872\ql\ltrch\loch \f0\fs24\b0\i0}