{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 It took the European Space Agency 10 years and $7 billion to produce Ariane 5, a giant rocket capable of hurling a pair of three-ton satellites into orbit with each launch and intended to give Europe overwhelming supremacy in the commercial space business. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 All it took to explode that rocket less than a minute into its maiden voyage in June 4, 1996, scattering fiery rubble across the mangrove swamps of French Guiana, was a small computer program trying to stuff a 64-bit number into a 16-bit space. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 This shutdown occurred 36.7 seconds after launch, when the guidance system's own computer tried to convert one piece of data -- the sideways velocity of the rocket -- from a 64-bit format to a 16-bit format. The number was too big, and an overflow error resulted. Steering was controlled by the on-board computer, which mistakenly thought the rocket needed a course change because of numbers coming from the inertial guidance system. That device uses gyroscopes and accelerometers to track motion. The numbers looked like flight data -- bizarre and impossible flight data -- but were actually a diagnostic error message. The guidance system had in fact shut down.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 LT (Launch Time) = 9 o\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92clock. At 33 min. 59 sec. local time, the \u8220\'93launch window\u8221\'94 was \u8220\'93caught\u8221\'94 again and finally, the vehicle launched and was running in a normal mode until LT+37 seconds. In the following several seconds there was a dramatic deviation from the given missile trajectory that ended in an explosion.}
\par\plain {\f0\fs24\b0\i0 At LT+39 seconds, because of high aerodynamic load due to the \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93angle of attack\u8221\'94 exceeding 20 degrees, the starting accelerators separated from its main stage, which triggered the missile Autodestruct System.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The change of the angle of attack happened because of a malfunction in the nozzle rotation of the solid accelerators, which was caused by a command from an on-board computer *based on the information from the active Navigation System (IRS 2)*. Some of this information was incorrect in principle: what has been *interpreted as flight details was actually diagnostic information* from the IRS 2 firmware.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The protection of all 7 (including BH) variables wasn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t provided because the maximum workload for the IRS computer was declared as 80%. The developers had to look for ways to reduce unnecessary evaluation expenses, and they weakened the protection in that fragment where theoretically the accident could not happen. When it occurred, then the exception handling mechanism was activated, which turned out to be completely inadequate. This mechanism supposes three main steps:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * The information about the contingency should be transmitted via the bus to the onboard computer OBC. This indeed happened, but the OBC was not aware that this data was not flight data but status data instead.}
\par\plain {\f0\fs24\b0\i0 * In parallel it was written \endash  together with the whole context \endash  to the reprogramming memory EEPROM (during the investigation it was possible to restore it and read the contents)}
\par\plain {\f0\fs24\b0\i0 * The work of IRS processor should have been aborted.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The last action was a fatal one; it led to the accident despite the fact that the situation was quite normal (even though there was an exception generated due to unsecured overflow).}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Sources: [@Lions:1996og] referenced in [@Leveson2004];}
\par\plain {\f0\fs24\b0\i0  https://hownot2code.com/2016/09/02/a-space-error-370-million-for-an-integer-overflow/}
\par\plain {\f0\fs24\b0\i0  http://www.around.com/ariane.html}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0\cf1 * Failure in sIOP}
\par\plain {\f0\fs24\b0\i0 * Failure between }{\f0\fs24\b0\i0\cf1 : Inertial guidance system <-> on-board computer}
\par\plain {\f0\fs24\b0\i0\cf1 * Fault: }{\f0\fs24\b0\i0 Term overloading, as well as Semantic variety (inconsistent representation)}
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}