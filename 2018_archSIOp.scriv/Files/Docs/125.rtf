{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ql\ltrch\loch {\f0\fs24\b0\i0 **Construct excess** [@Wand:1993dX] occurs when a language construct does not represent any domain concept. A language `L` is **sound** w.r.t. to a domain `D` iff every modeling primitive in the language has an interpretation in terms of a domain concept in the ontology `O` [@Guizzardi:2005tn]. Although construct excess results in the creation of unsound models, soundness at the language level does not prohibit the creation of unsound models. }
\par\pard\plain \ltrch\loch \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Since no mapping is defined for the exceeding construct, its meaning becomes uncertain, hence, undermining the clarity of the model. Users of modeling language must be able to make a clear link between a modeling construct and its interpretation in terms of domain concepts. Otherwise, they will be unable to articulate precisely the meaning of the models they generate using the language.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 These characteristics are very close to *concept overloading* (see \\cref\{concept-overloading\}), the distinction being that concept overload is a fact of life that *is* occurring intra- or inter-domain and *will* hamper sIOP, while soundness and construct excesses are tooling issues that are implicit to unsound language design principles that create sIOP issues by representational design-flaws.}}