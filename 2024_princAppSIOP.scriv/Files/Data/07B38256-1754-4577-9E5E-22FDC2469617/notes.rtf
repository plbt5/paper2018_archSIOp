{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 CourierNewPS-ItalicMT;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 This provides the capability to speak about the shared DoA and the SoA that is to be achieved, or a current matter of fact.\
\
==\
\
Now that we know what dynamic sIOP entails, the question arises how to realise ... DPs, protocol. ... further investigated in Sec ... But first we discuss the current state of the art.\
\
*Design principles* provide the necessary guidance to the architect for the various design decisions that effectively result in a particular bridge over a particular semantic gap. A *semantic protocol* allows the software agents to maintain sIOP between them under dynamic conditions.\
\
\
===\
At large, interoperability refers to a broad range of ICT capabilities in support of the many disciplines that are considered relevant for achieving collaboration between organisations. Despite the broad range, those capabilities share one single purpose, viz the reconciliation of differences that exist between collaborating stakeholders. When these differences occur in the ICT stack, technological standards suffice for their resolution. The successful application of ICT standards throughout the last decades has made us believe that standards are the panacea for 
\f1 <$Scr_Cs::0>
\f2\i all
\f1\i0 <!$Scr_Cs::0>
\f0  differences that impede collaboration; differences in semantics and pragmatics, or of organisational, legal, financial, and cultural nature, to name a few. This is a fallacy, particularly because, first, these differences are not under control of the ICT community but remain the responsibility of the domain; second, the variety and magnitude of the vocabulary, and context-dependence allowed by natural language, provides for an expressiveness that is not only beyond standardisation, but emerged to serve a purpose. Because, conversational vagueness can be a necessary condition for effective collaboration \\cite\{Jucker2003\}. And, every natural language is both vague and ambiguous, whereas programming languages need to be mathematically unequivocal in order for ICT systems to even operate at all.\
\
}